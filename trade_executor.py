# === trade_executor.py ===
# –§–æ–Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –∏ –∑–∞–ø—É—Å–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π

import time
import psycopg2
import os
from datetime import datetime

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
PG_HOST = os.environ.get("PG_HOST")
PG_PORT = os.environ.get("PG_PORT", 5432)
PG_NAME = os.environ.get("PG_NAME")
PG_USER = os.environ.get("PG_USER")
PG_PASSWORD = os.environ.get("PG_PASSWORD")

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–æ—Ä–∫–µ—Ä–∞
def run_executor():
    print("üöÄ Trade Executor –∑–∞–ø—É—â–µ–Ω", flush=True)
    while True:
        try:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
            conn = psycopg2.connect(
                dbname=PG_NAME,
                user=PG_USER,
                password=PG_PASSWORD,
                host=PG_HOST,
                port=PG_PORT
            )
            cur = conn.cursor()

            # üì• –ß—Ç–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö action-—Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É
            cur.execute("""
                SELECT timestamp, symbol, action
                FROM signals
                WHERE action IN ('BUY', 'SELL')
                  AND timestamp >= now() - interval '1 minute'
                ORDER BY timestamp DESC
            """)
            signals = cur.fetchall()
            conn.close()

            if not signals:
                print("‚è± –ù–µ—Ç —Å–≤–µ–∂–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ (–∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É)", flush=True)

            for ts, symbol, action in signals:
                print(f"[{ts}] üõ∞Ô∏è {action} {symbol}", flush=True)
                # TODO: –∑–∞–ø—É—Å–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ channel_vilarso

        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ trade_executor:", e, flush=True)

        time.sleep(10)

if __name__ == "__main__":
    run_executor()